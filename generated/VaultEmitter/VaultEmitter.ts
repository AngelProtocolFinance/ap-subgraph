// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get endowId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sharesReceived(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get endowId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VaultConfigUpdated extends ethereum.Event {
  get params(): VaultConfigUpdated__Params {
    return new VaultConfigUpdated__Params(this);
  }
}

export class VaultConfigUpdated__Params {
  _event: VaultConfigUpdated;

  constructor(event: VaultConfigUpdated) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get config(): VaultConfigUpdatedConfigStruct {
    return changetype<VaultConfigUpdatedConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class VaultConfigUpdatedConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategyId(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}

export class VaultCreated extends ethereum.Event {
  get params(): VaultCreated__Params {
    return new VaultCreated__Params(this);
  }
}

export class VaultCreated__Params {
  _event: VaultCreated;

  constructor(event: VaultCreated) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get config(): VaultCreatedConfigStruct {
    return changetype<VaultCreatedConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class VaultCreatedConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategyId(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}

export class VaultEmitter extends ethereum.SmartContract {
  static bind(address: Address): VaultEmitter {
    return new VaultEmitter("VaultEmitter", address);
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get endowId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get sharesReceived(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get endowId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get shares(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amountRedeemed(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class VaultConfigUpdatedCall extends ethereum.Call {
  get inputs(): VaultConfigUpdatedCall__Inputs {
    return new VaultConfigUpdatedCall__Inputs(this);
  }

  get outputs(): VaultConfigUpdatedCall__Outputs {
    return new VaultConfigUpdatedCall__Outputs(this);
  }
}

export class VaultConfigUpdatedCall__Inputs {
  _call: VaultConfigUpdatedCall;

  constructor(call: VaultConfigUpdatedCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get config(): VaultConfigUpdatedCallConfigStruct {
    return changetype<VaultConfigUpdatedCallConfigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class VaultConfigUpdatedCall__Outputs {
  _call: VaultConfigUpdatedCall;

  constructor(call: VaultConfigUpdatedCall) {
    this._call = call;
  }
}

export class VaultConfigUpdatedCallConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategyId(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}

export class VaultCreatedCall extends ethereum.Call {
  get inputs(): VaultCreatedCall__Inputs {
    return new VaultCreatedCall__Inputs(this);
  }

  get outputs(): VaultCreatedCall__Outputs {
    return new VaultCreatedCall__Outputs(this);
  }
}

export class VaultCreatedCall__Inputs {
  _call: VaultCreatedCall;

  constructor(call: VaultCreatedCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get config(): VaultCreatedCallConfigStruct {
    return changetype<VaultCreatedCallConfigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class VaultCreatedCall__Outputs {
  _call: VaultCreatedCall;

  constructor(call: VaultCreatedCall) {
    this._call = call;
  }
}

export class VaultCreatedCallConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategyId(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}
