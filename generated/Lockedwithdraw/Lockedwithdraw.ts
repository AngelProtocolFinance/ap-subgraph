// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LockedwithdrawInitialized extends ethereum.Event {
  get params(): LockedwithdrawInitialized__Params {
    return new LockedwithdrawInitialized__Params(this);
  }
}

export class LockedwithdrawInitialized__Params {
  _event: LockedwithdrawInitialized;

  constructor(event: LockedwithdrawInitialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LockedWithdrawAPTeam extends ethereum.Event {
  get params(): LockedWithdrawAPTeam__Params {
    return new LockedWithdrawAPTeam__Params(this);
  }
}

export class LockedWithdrawAPTeam__Params {
  _event: LockedWithdrawAPTeam;

  constructor(event: LockedWithdrawAPTeam) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LockedWithdrawApproved extends ethereum.Event {
  get params(): LockedWithdrawApproved__Params {
    return new LockedWithdrawApproved__Params(this);
  }
}

export class LockedWithdrawApproved__Params {
  _event: LockedWithdrawApproved;

  constructor(event: LockedWithdrawApproved) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenAddress(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get _amount(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class LockedWithdrawEndowment extends ethereum.Event {
  get params(): LockedWithdrawEndowment__Params {
    return new LockedWithdrawEndowment__Params(this);
  }
}

export class LockedWithdrawEndowment__Params {
  _event: LockedWithdrawEndowment;

  constructor(event: LockedWithdrawEndowment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LockedWithdrawInitiated extends ethereum.Event {
  get params(): LockedWithdrawInitiated__Params {
    return new LockedWithdrawInitiated__Params(this);
  }
}

export class LockedWithdrawInitiated__Params {
  _event: LockedWithdrawInitiated;

  constructor(event: LockedWithdrawInitiated) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _tokenAddress(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get _amount(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class LockedWithdrawRejected extends ethereum.Event {
  get params(): LockedWithdrawRejected__Params {
    return new LockedWithdrawRejected__Params(this);
  }
}

export class LockedWithdrawRejected__Params {
  _event: LockedWithdrawRejected;

  constructor(event: LockedWithdrawRejected) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Lockedwithdraw extends ethereum.SmartContract {
  static bind(address: Address): Lockedwithdraw {
    return new Lockedwithdraw("Lockedwithdraw", address);
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _registrar(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _accounts(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _apTeamMultisig(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _endowFactory(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenAddress(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _amount(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }
}

export class RejectCall extends ethereum.Call {
  get inputs(): RejectCall__Inputs {
    return new RejectCall__Inputs(this);
  }

  get outputs(): RejectCall__Outputs {
    return new RejectCall__Outputs(this);
  }
}

export class RejectCall__Inputs {
  _call: RejectCall;

  constructor(call: RejectCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectCall__Outputs {
  _call: RejectCall;

  constructor(call: RejectCall) {
    this._call = call;
  }
}

export class UpdateConfigCall extends ethereum.Call {
  get inputs(): UpdateConfigCall__Inputs {
    return new UpdateConfigCall__Inputs(this);
  }

  get outputs(): UpdateConfigCall__Outputs {
    return new UpdateConfigCall__Outputs(this);
  }
}

export class UpdateConfigCall__Inputs {
  _call: UpdateConfigCall;

  constructor(call: UpdateConfigCall) {
    this._call = call;
  }

  get _registrar(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _accounts(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _apTeamMultisig(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _endowFactory(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class UpdateConfigCall__Outputs {
  _call: UpdateConfigCall;

  constructor(call: UpdateConfigCall) {
    this._call = call;
  }
}
