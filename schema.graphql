type Deposit @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FallbackRefund @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Harvest @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LogError @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  message: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LogErrorBytes @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Redemption @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokensSent @entity(immutable: true) {
  id: Bytes!
  action_destinationChain: String! # string
  action_strategyId: Bytes! # bytes4
  action_selector: Bytes! # bytes4
  action_accountIds: [BigInt!]! # uint32[]
  action_token: Bytes! # address
  action_lockAmt: BigInt! # uint256
  action_liqAmt: BigInt! # uint256
  action_status: Int! # uint8
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Confirmation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type APTeamMultiSigDeposit @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Execution @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExecutionFailure @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExecutionRequiredChange @entity(immutable: true) {
  id: Bytes!
  requireExecution: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type APTeamMultiSigInitialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerAddition @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerRemoval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequirementChange @entity(immutable: true) {
  id: Bytes!
  required: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Revocation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Submission @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ContractInstantiation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  instantiation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigFactoryOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type EndowmentMultiSigConfirmation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigDeposit @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigExecution @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigExecutionFailure @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigExecutionRequiredChange @entity(immutable: true) {
  id: Bytes!
  requireExecution: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigInitialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigOwnerAddition @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigOwnerRemoval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigRequirementChange @entity(immutable: true) {
  id: Bytes!
  required: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigRevocation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentMultiSigSubmission @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AccountsContractStorageChanged @entity(immutable: true) {
  id: Bytes!
  _chainName: String! # string
  _accountsContractAddress: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AngelProtocolParamsChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeleteNetworkConnection @entity(immutable: true) {
  id: Bytes!
  chainId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FeeUpdated @entity(immutable: true) {
  id: Bytes!
  _fee: Int! # uint8
  _rate: BigInt! # uint256
  _payout: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GasFeeUpdated @entity(immutable: true) {
  id: Bytes!
  _tokenAddr: Bytes! # address
  _gasFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RegistrarInitialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RegistrarOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostNetworkConnection @entity(immutable: true) {
  id: Bytes!
  chainId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RebalanceParamsChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyApprovalChanged @entity(immutable: true) {
  id: Bytes!
  _strategyId: Bytes! # bytes4
  _approvalState: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyParamsChanged @entity(immutable: true) {
  id: Bytes!
  _strategyId: Bytes! # bytes4
  _lockAddr: Bytes! # address
  _liqAddr: Bytes! # address
  _approvalState: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenAcceptanceChanged @entity(immutable: true) {
  id: Bytes!
  _tokenAddr: Bytes! # address
  _isAccepted: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateRegistrarConfig @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AllowanceStateUpdatedTo @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo1 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated1 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance1 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig1 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment1 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo2 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated2 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance2 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig2 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment2 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo3 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated3 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance3 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig3 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment3 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo4 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated4 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance4 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwappedToken @entity(immutable: true) {
  id: Bytes!
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig4 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment4 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo5 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated5 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance5 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig5 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment5 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo6 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated6 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance6 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig6 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment6 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo7 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated7 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance7 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig7 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment7 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo8 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated8 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance8 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig8 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment8 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo9 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated9 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance9 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig9 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment9 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo10 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated10 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance10 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig10 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment10 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo11 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated11 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance11 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig11 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment11 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AllowanceStateUpdatedTo12 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  allowance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DaoContractCreated12 @entity(immutable: true) {
  id: Bytes!
  endowId: BigInt! # uint32
  daoAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationDeposited12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMatchSetup12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  donationMatchContract: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationWithdrawn12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentCreated12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndowmentSettingUpdated12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  setting: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveAllowance12 @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  spender: Bytes! # address
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SwapToken12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  accountType: Int! # uint8
  tokenIn: Bytes! # address
  amountIn: BigInt! # uint256
  tokenOut: Bytes! # address
  amountOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateConfig12 @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEndowment12 @entity(immutable: true) {
  id: Bytes!
  Accounts_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type CharityApproved @entity(immutable: true) {
  id: Bytes!
  proposalId: BigInt! # uint256
  endowmentId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CharityProposed @entity(immutable: true) {
  id: Bytes!
  proposer: Bytes! # address
  proposalId: BigInt! # uint256
  meta: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CharityRejected @entity(immutable: true) {
  id: Bytes!
  proposalId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CharityApplicationDeposit @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GasSent @entity(immutable: true) {
  id: Bytes!
  endowmentId: BigInt! # uint256
  member: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InitilizedCharityApplication @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SeedAssetSent @entity(immutable: true) {
  id: Bytes!
  endowmentId: BigInt! # uint256
  asset: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ConfigUpdated @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationMessagesUpdated @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IndexFundCreated @entity(immutable: true) {
  id: Bytes!
  IndexFund_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IndexFundRemoved @entity(immutable: true) {
  id: Bytes!
  IndexFund_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IndexFundInitialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MemberAdded @entity(immutable: true) {
  id: Bytes!
  fundId: BigInt! # uint256
  memberId: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MemberRemoved @entity(immutable: true) {
  id: Bytes!
  fundId: BigInt! # uint256
  memberId: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerUpdated @entity(immutable: true) {
  id: Bytes!
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RegistrarUpdated @entity(immutable: true) {
  id: Bytes!
  newRegistrar: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateActiveFund @entity(immutable: true) {
  id: Bytes!
  fundId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateIndexFundState @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ApplicationsMultiSigConfirmation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigDeposit @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigExecution @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigExecutionFailure @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigExecutionRequiredChange @entity(immutable: true) {
  id: Bytes!
  requireExecution: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigInitialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigOwnerAddition @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigOwnerRemoval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigRequirementChange @entity(immutable: true) {
  id: Bytes!
  required: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigRevocation @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApplicationsMultiSigSubmission @entity(immutable: true) {
  id: Bytes!
  transactionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
