// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class donationMatchCharityInitialized extends ethereum.Event {
  get params(): donationMatchCharityInitialized__Params {
    return new donationMatchCharityInitialized__Params(this);
  }
}

export class donationMatchCharityInitialized__Params {
  _event: donationMatchCharityInitialized;

  constructor(event: donationMatchCharityInitialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class donationMatchCharityErc20ApprovalGiven extends ethereum.Event {
  get params(): donationMatchCharityErc20ApprovalGiven__Params {
    return new donationMatchCharityErc20ApprovalGiven__Params(this);
  }
}

export class donationMatchCharityErc20ApprovalGiven__Params {
  _event: donationMatchCharityErc20ApprovalGiven;

  constructor(event: donationMatchCharityErc20ApprovalGiven) {
    this._event = event;
  }

  get endowment_id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class donationMatchCharityErc20Burned extends ethereum.Event {
  get params(): donationMatchCharityErc20Burned__Params {
    return new donationMatchCharityErc20Burned__Params(this);
  }
}

export class donationMatchCharityErc20Burned__Params {
  _event: donationMatchCharityErc20Burned;

  constructor(event: donationMatchCharityErc20Burned) {
    this._event = event;
  }

  get endowment_id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class donationMatchCharityErc20Transfer extends ethereum.Event {
  get params(): donationMatchCharityErc20Transfer__Params {
    return new donationMatchCharityErc20Transfer__Params(this);
  }
}

export class donationMatchCharityErc20Transfer__Params {
  _event: donationMatchCharityErc20Transfer;

  constructor(event: donationMatchCharityErc20Transfer) {
    this._event = event;
  }

  get endowment_id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class donationMatchCharityExecuted extends ethereum.Event {
  get params(): donationMatchCharityExecuted__Params {
    return new donationMatchCharityExecuted__Params(this);
  }
}

export class donationMatchCharityExecuted__Params {
  _event: donationMatchCharityExecuted;

  constructor(event: donationMatchCharityExecuted) {
    this._event = event;
  }

  get donationMatch(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get accounts_contract(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get endowment_id(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get donor(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class donationMatchCharityInitialized1 extends ethereum.Event {
  get params(): donationMatchCharityInitialized1__Params {
    return new donationMatchCharityInitialized1__Params(this);
  }
}

export class donationMatchCharityInitialized1__Params {
  _event: donationMatchCharityInitialized1;

  constructor(event: donationMatchCharityInitialized1) {
    this._event = event;
  }

  get donationMatch(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get config(): donationMatchCharityInitialized1ConfigStruct {
    return changetype<donationMatchCharityInitialized1ConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class donationMatchCharityInitialized1ConfigStruct extends ethereum.Tuple {
  get reserve_token(): Address {
    return this[0].toAddress();
  }

  get uniswap_factory(): Address {
    return this[1].toAddress();
  }

  get USDC_address(): Address {
    return this[2].toAddress();
  }

  get registrar_contract(): Address {
    return this[3].toAddress();
  }

  get pool_fee(): i32 {
    return this[4].toI32();
  }
}

export class donationMatchCharity__query_configResultValue0Struct extends ethereum.Tuple {
  get reserve_token(): Address {
    return this[0].toAddress();
  }

  get uniswap_factory(): Address {
    return this[1].toAddress();
  }

  get USDC_address(): Address {
    return this[2].toAddress();
  }

  get registrar_contract(): Address {
    return this[3].toAddress();
  }

  get pool_fee(): i32 {
    return this[4].toI32();
  }
}

export class donationMatchCharity extends ethereum.SmartContract {
  static bind(address: Address): donationMatchCharity {
    return new donationMatchCharity("donationMatchCharity", address);
  }

  query_config(): donationMatchCharity__query_configResultValue0Struct {
    let result = super.call(
      "query_config",
      "query_config():((address,address,address,address,uint24))",
      []
    );

    return changetype<donationMatchCharity__query_configResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_query_config(): ethereum.CallResult<
    donationMatchCharity__query_configResultValue0Struct
  > {
    let result = super.tryCall(
      "query_config",
      "query_config():((address,address,address,address,uint24))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<donationMatchCharity__query_configResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class Execute_donor_matchCall extends ethereum.Call {
  get inputs(): Execute_donor_matchCall__Inputs {
    return new Execute_donor_matchCall__Inputs(this);
  }

  get outputs(): Execute_donor_matchCall__Outputs {
    return new Execute_donor_matchCall__Outputs(this);
  }
}

export class Execute_donor_matchCall__Inputs {
  _call: Execute_donor_matchCall;

  constructor(call: Execute_donor_matchCall) {
    this._call = call;
  }

  get endowment_id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get donor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class Execute_donor_matchCall__Outputs {
  _call: Execute_donor_matchCall;

  constructor(call: Execute_donor_matchCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _details(): InitializeCall_detailsStruct {
    return changetype<InitializeCall_detailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall_detailsStruct extends ethereum.Tuple {
  get reserve_token(): Address {
    return this[0].toAddress();
  }

  get uniswap_factory(): Address {
    return this[1].toAddress();
  }

  get registrar_contract(): Address {
    return this[2].toAddress();
  }

  get pool_fee(): i32 {
    return this[3].toI32();
  }

  get USDC_address(): Address {
    return this[4].toAddress();
  }
}
