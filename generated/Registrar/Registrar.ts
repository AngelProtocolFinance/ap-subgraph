// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccountsContractStorageUpdated extends ethereum.Event {
  get params(): AccountsContractStorageUpdated__Params {
    return new AccountsContractStorageUpdated__Params(this);
  }
}

export class AccountsContractStorageUpdated__Params {
  _event: AccountsContractStorageUpdated;

  constructor(event: AccountsContractStorageUpdated) {
    this._event = event;
  }

  get _chainName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _accountsContractAddress(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class AngelProtocolParamsUpdated extends ethereum.Event {
  get params(): AngelProtocolParamsUpdated__Params {
    return new AngelProtocolParamsUpdated__Params(this);
  }
}

export class AngelProtocolParamsUpdated__Params {
  _event: AngelProtocolParamsUpdated;

  constructor(event: AngelProtocolParamsUpdated) {
    this._event = event;
  }
}

export class ConfigUpdated extends ethereum.Event {
  get params(): ConfigUpdated__Params {
    return new ConfigUpdated__Params(this);
  }
}

export class ConfigUpdated__Params {
  _event: ConfigUpdated;

  constructor(event: ConfigUpdated) {
    this._event = event;
  }
}

export class FeeSettingsUpdated extends ethereum.Event {
  get params(): FeeSettingsUpdated__Params {
    return new FeeSettingsUpdated__Params(this);
  }
}

export class FeeSettingsUpdated__Params {
  _event: FeeSettingsUpdated;

  constructor(event: FeeSettingsUpdated) {
    this._event = event;
  }

  get _feeType(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _bpsRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _payoutAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class GasFeeUpdated extends ethereum.Event {
  get params(): GasFeeUpdated__Params {
    return new GasFeeUpdated__Params(this);
  }
}

export class GasFeeUpdated__Params {
  _event: GasFeeUpdated;

  constructor(event: GasFeeUpdated) {
    this._event = event;
  }

  get _tokenAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _gasFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class NetworkConnectionPosted extends ethereum.Event {
  get params(): NetworkConnectionPosted__Params {
    return new NetworkConnectionPosted__Params(this);
  }
}

export class NetworkConnectionPosted__Params {
  _event: NetworkConnectionPosted;

  constructor(event: NetworkConnectionPosted) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NetworkConnectionRemoved extends ethereum.Event {
  get params(): NetworkConnectionRemoved__Params {
    return new NetworkConnectionRemoved__Params(this);
  }
}

export class NetworkConnectionRemoved__Params {
  _event: NetworkConnectionRemoved;

  constructor(event: NetworkConnectionRemoved) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RebalanceParamsUpdated extends ethereum.Event {
  get params(): RebalanceParamsUpdated__Params {
    return new RebalanceParamsUpdated__Params(this);
  }
}

export class RebalanceParamsUpdated__Params {
  _event: RebalanceParamsUpdated;

  constructor(event: RebalanceParamsUpdated) {
    this._event = event;
  }
}

export class StrategyApprovalUpdated extends ethereum.Event {
  get params(): StrategyApprovalUpdated__Params {
    return new StrategyApprovalUpdated__Params(this);
  }
}

export class StrategyApprovalUpdated__Params {
  _event: StrategyApprovalUpdated;

  constructor(event: StrategyApprovalUpdated) {
    this._event = event;
  }

  get _strategyId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _approvalState(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class StrategyParamsUpdated extends ethereum.Event {
  get params(): StrategyParamsUpdated__Params {
    return new StrategyParamsUpdated__Params(this);
  }
}

export class StrategyParamsUpdated__Params {
  _event: StrategyParamsUpdated;

  constructor(event: StrategyParamsUpdated) {
    this._event = event;
  }

  get _strategyId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _lockAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _liqAddr(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _approvalState(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class TokenAcceptanceUpdated extends ethereum.Event {
  get params(): TokenAcceptanceUpdated__Params {
    return new TokenAcceptanceUpdated__Params(this);
  }
}

export class TokenAcceptanceUpdated__Params {
  _event: TokenAcceptanceUpdated;

  constructor(event: TokenAcceptanceUpdated) {
    this._event = event;
  }

  get _tokenAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _isAccepted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Registrar__getAPGoldfinchParamsResultValue0Struct extends ethereum.Tuple {
  get crvParams(): Registrar__getAPGoldfinchParamsResultValue0CrvParamsStruct {
    return changetype<
      Registrar__getAPGoldfinchParamsResultValue0CrvParamsStruct
    >(this[0].toTuple());
  }
}

export class Registrar__getAPGoldfinchParamsResultValue0CrvParamsStruct extends ethereum.Tuple {
  get allowedSlippage(): BigInt {
    return this[0].toBigInt();
  }
}

export class Registrar__getAngelProtocolParamsResultValue0Struct extends ethereum.Tuple {
  get routerAddr(): Address {
    return this[0].toAddress();
  }

  get refundAddr(): Address {
    return this[1].toAddress();
  }
}

export class Registrar__getFeeSettingsByFeeTypeResultValue0Struct extends ethereum.Tuple {
  get payoutAddress(): Address {
    return this[0].toAddress();
  }

  get bps(): BigInt {
    return this[1].toBigInt();
  }
}

export class Registrar__getRebalanceParamsResultValue0Struct extends ethereum.Tuple {
  get rebalanceLiquidProfits(): boolean {
    return this[0].toBoolean();
  }

  get lockedRebalanceToLiquid(): BigInt {
    return this[1].toBigInt();
  }

  get interestDistribution(): BigInt {
    return this[2].toBigInt();
  }

  get lockedPrincipleToLiquid(): boolean {
    return this[3].toBoolean();
  }

  get principleDistribution(): BigInt {
    return this[4].toBigInt();
  }

  get basis(): BigInt {
    return this[5].toBigInt();
  }
}

export class Registrar__getStrategyParamsByIdResultValue0Struct extends ethereum.Tuple {
  get approvalState(): i32 {
    return this[0].toI32();
  }

  get Locked(): Registrar__getStrategyParamsByIdResultValue0LockedStruct {
    return changetype<Registrar__getStrategyParamsByIdResultValue0LockedStruct>(
      this[1].toTuple()
    );
  }

  get Liquid(): Registrar__getStrategyParamsByIdResultValue0LiquidStruct {
    return changetype<Registrar__getStrategyParamsByIdResultValue0LiquidStruct>(
      this[2].toTuple()
    );
  }
}

export class Registrar__getStrategyParamsByIdResultValue0LockedStruct extends ethereum.Tuple {
  get Type(): i32 {
    return this[0].toI32();
  }

  get vaultAddr(): Address {
    return this[1].toAddress();
  }
}

export class Registrar__getStrategyParamsByIdResultValue0LiquidStruct extends ethereum.Tuple {
  get Type(): i32 {
    return this[0].toI32();
  }

  get vaultAddr(): Address {
    return this[1].toAddress();
  }
}

export class Registrar__queryConfigResultValue0Struct extends ethereum.Tuple {
  get applicationsReview(): Address {
    return this[0].toAddress();
  }

  get indexFundContract(): Address {
    return this[1].toAddress();
  }

  get accountsContract(): Address {
    return this[2].toAddress();
  }

  get treasury(): Address {
    return this[3].toAddress();
  }

  get subdaoGovContract(): Address {
    return this[4].toAddress();
  }

  get subdaoTokenContract(): Address {
    return this[5].toAddress();
  }

  get subdaoBondingTokenContract(): Address {
    return this[6].toAddress();
  }

  get subdaoCw900Contract(): Address {
    return this[7].toAddress();
  }

  get subdaoDistributorContract(): Address {
    return this[8].toAddress();
  }

  get subdaoEmitter(): Address {
    return this[9].toAddress();
  }

  get donationMatchContract(): Address {
    return this[10].toAddress();
  }

  get donationMatchCharitesContract(): Address {
    return this[11].toAddress();
  }

  get donationMatchEmitter(): Address {
    return this[12].toAddress();
  }

  get splitToLiquid(): Registrar__queryConfigResultValue0SplitToLiquidStruct {
    return changetype<Registrar__queryConfigResultValue0SplitToLiquidStruct>(
      this[13].toTuple()
    );
  }

  get haloToken(): Address {
    return this[14].toAddress();
  }

  get haloTokenLpContract(): Address {
    return this[15].toAddress();
  }

  get govContract(): Address {
    return this[16].toAddress();
  }

  get collectorShare(): BigInt {
    return this[17].toBigInt();
  }

  get charitySharesContract(): Address {
    return this[18].toAddress();
  }

  get fundraisingContract(): Address {
    return this[19].toAddress();
  }

  get uniswapRouter(): Address {
    return this[20].toAddress();
  }

  get uniswapFactory(): Address {
    return this[21].toAddress();
  }

  get multisigFactory(): Address {
    return this[22].toAddress();
  }

  get multisigEmitter(): Address {
    return this[23].toAddress();
  }

  get charityProposal(): Address {
    return this[24].toAddress();
  }

  get lockedWithdrawal(): Address {
    return this[25].toAddress();
  }

  get proxyAdmin(): Address {
    return this[26].toAddress();
  }

  get usdcAddress(): Address {
    return this[27].toAddress();
  }

  get wMaticAddress(): Address {
    return this[28].toAddress();
  }

  get cw900lvAddress(): Address {
    return this[29].toAddress();
  }
}

export class Registrar__queryConfigResultValue0SplitToLiquidStruct extends ethereum.Tuple {
  get max(): BigInt {
    return this[0].toBigInt();
  }

  get min(): BigInt {
    return this[1].toBigInt();
  }

  get defaultSplit(): BigInt {
    return this[2].toBigInt();
  }
}

export class Registrar__queryNetworkConnectionResultResponseStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get chainId(): BigInt {
    return this[1].toBigInt();
  }

  get router(): Address {
    return this[2].toAddress();
  }

  get axelarGateway(): Address {
    return this[3].toAddress();
  }

  get ibcChannel(): string {
    return this[4].toString();
  }

  get transferChannel(): string {
    return this[5].toString();
  }

  get gasReceiver(): Address {
    return this[6].toAddress();
  }

  get gasLimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class Registrar extends ethereum.SmartContract {
  static bind(address: Address): Registrar {
    return new Registrar("Registrar", address);
  }

  getAPGoldfinchParams(): Registrar__getAPGoldfinchParamsResultValue0Struct {
    let result = super.call(
      "getAPGoldfinchParams",
      "getAPGoldfinchParams():(((uint256)))",
      []
    );

    return changetype<Registrar__getAPGoldfinchParamsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAPGoldfinchParams(): ethereum.CallResult<
    Registrar__getAPGoldfinchParamsResultValue0Struct
  > {
    let result = super.tryCall(
      "getAPGoldfinchParams",
      "getAPGoldfinchParams():(((uint256)))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__getAPGoldfinchParamsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getAccountsContractAddressByChain(_targetChain: string): string {
    let result = super.call(
      "getAccountsContractAddressByChain",
      "getAccountsContractAddressByChain(string):(string)",
      [ethereum.Value.fromString(_targetChain)]
    );

    return result[0].toString();
  }

  try_getAccountsContractAddressByChain(
    _targetChain: string
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getAccountsContractAddressByChain",
      "getAccountsContractAddressByChain(string):(string)",
      [ethereum.Value.fromString(_targetChain)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAngelProtocolParams(): Registrar__getAngelProtocolParamsResultValue0Struct {
    let result = super.call(
      "getAngelProtocolParams",
      "getAngelProtocolParams():((address,address))",
      []
    );

    return changetype<Registrar__getAngelProtocolParamsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAngelProtocolParams(): ethereum.CallResult<
    Registrar__getAngelProtocolParamsResultValue0Struct
  > {
    let result = super.tryCall(
      "getAngelProtocolParams",
      "getAngelProtocolParams():((address,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__getAngelProtocolParamsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getFeeSettingsByFeeType(
    _feeType: i32
  ): Registrar__getFeeSettingsByFeeTypeResultValue0Struct {
    let result = super.call(
      "getFeeSettingsByFeeType",
      "getFeeSettingsByFeeType(uint8):((address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_feeType))]
    );

    return changetype<Registrar__getFeeSettingsByFeeTypeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getFeeSettingsByFeeType(
    _feeType: i32
  ): ethereum.CallResult<Registrar__getFeeSettingsByFeeTypeResultValue0Struct> {
    let result = super.tryCall(
      "getFeeSettingsByFeeType",
      "getFeeSettingsByFeeType(uint8):((address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_feeType))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__getFeeSettingsByFeeTypeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getGasByToken(_tokenAddr: Address): BigInt {
    let result = super.call(
      "getGasByToken",
      "getGasByToken(address):(uint256)",
      [ethereum.Value.fromAddress(_tokenAddr)]
    );

    return result[0].toBigInt();
  }

  try_getGasByToken(_tokenAddr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGasByToken",
      "getGasByToken(address):(uint256)",
      [ethereum.Value.fromAddress(_tokenAddr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRebalanceParams(): Registrar__getRebalanceParamsResultValue0Struct {
    let result = super.call(
      "getRebalanceParams",
      "getRebalanceParams():((bool,uint32,uint32,bool,uint32,uint32))",
      []
    );

    return changetype<Registrar__getRebalanceParamsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getRebalanceParams(): ethereum.CallResult<
    Registrar__getRebalanceParamsResultValue0Struct
  > {
    let result = super.tryCall(
      "getRebalanceParams",
      "getRebalanceParams():((bool,uint32,uint32,bool,uint32,uint32))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__getRebalanceParamsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getStrategyApprovalState(_strategyId: Bytes): i32 {
    let result = super.call(
      "getStrategyApprovalState",
      "getStrategyApprovalState(bytes4):(uint8)",
      [ethereum.Value.fromFixedBytes(_strategyId)]
    );

    return result[0].toI32();
  }

  try_getStrategyApprovalState(_strategyId: Bytes): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getStrategyApprovalState",
      "getStrategyApprovalState(bytes4):(uint8)",
      [ethereum.Value.fromFixedBytes(_strategyId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getStrategyParamsById(
    _strategyId: Bytes
  ): Registrar__getStrategyParamsByIdResultValue0Struct {
    let result = super.call(
      "getStrategyParamsById",
      "getStrategyParamsById(bytes4):((uint8,(uint8,address),(uint8,address)))",
      [ethereum.Value.fromFixedBytes(_strategyId)]
    );

    return changetype<Registrar__getStrategyParamsByIdResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getStrategyParamsById(
    _strategyId: Bytes
  ): ethereum.CallResult<Registrar__getStrategyParamsByIdResultValue0Struct> {
    let result = super.tryCall(
      "getStrategyParamsById",
      "getStrategyParamsById(bytes4):((uint8,(uint8,address),(uint8,address)))",
      [ethereum.Value.fromFixedBytes(_strategyId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__getStrategyParamsByIdResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getUniswapFactoryAddress(): Address {
    let result = super.call(
      "getUniswapFactoryAddress",
      "getUniswapFactoryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getUniswapFactoryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getUniswapFactoryAddress",
      "getUniswapFactoryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUniswapRouterAddress(): Address {
    let result = super.call(
      "getUniswapRouterAddress",
      "getUniswapRouterAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getUniswapRouterAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getUniswapRouterAddress",
      "getUniswapRouterAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVaultOperatorApproved(_operator: Address): boolean {
    let result = super.call(
      "getVaultOperatorApproved",
      "getVaultOperatorApproved(address):(bool)",
      [ethereum.Value.fromAddress(_operator)]
    );

    return result[0].toBoolean();
  }

  try_getVaultOperatorApproved(
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getVaultOperatorApproved",
      "getVaultOperatorApproved(address):(bool)",
      [ethereum.Value.fromAddress(_operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTokenAccepted(_tokenAddr: Address): boolean {
    let result = super.call(
      "isTokenAccepted",
      "isTokenAccepted(address):(bool)",
      [ethereum.Value.fromAddress(_tokenAddr)]
    );

    return result[0].toBoolean();
  }

  try_isTokenAccepted(_tokenAddr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTokenAccepted",
      "isTokenAccepted(address):(bool)",
      [ethereum.Value.fromAddress(_tokenAddr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  queryAllStrategies(): Array<Bytes> {
    let result = super.call(
      "queryAllStrategies",
      "queryAllStrategies():(bytes4[])",
      []
    );

    return result[0].toBytesArray();
  }

  try_queryAllStrategies(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "queryAllStrategies",
      "queryAllStrategies():(bytes4[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  queryConfig(): Registrar__queryConfigResultValue0Struct {
    let result = super.call(
      "queryConfig",
      "queryConfig():((address,address,address,address,address,address,address,address,address,address,address,address,address,(uint256,uint256,uint256),address,address,address,uint256,address,address,address,address,address,address,address,address,address,address,address,address))",
      []
    );

    return changetype<Registrar__queryConfigResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_queryConfig(): ethereum.CallResult<
    Registrar__queryConfigResultValue0Struct
  > {
    let result = super.tryCall(
      "queryConfig",
      "queryConfig():((address,address,address,address,address,address,address,address,address,address,address,address,address,(uint256,uint256,uint256),address,address,address,uint256,address,address,address,address,address,address,address,address,address,address,address,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__queryConfigResultValue0Struct>(value[0].toTuple())
    );
  }

  queryNetworkConnection(
    chainId: BigInt
  ): Registrar__queryNetworkConnectionResultResponseStruct {
    let result = super.call(
      "queryNetworkConnection",
      "queryNetworkConnection(uint256):((string,uint256,address,address,string,string,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(chainId)]
    );

    return changetype<Registrar__queryNetworkConnectionResultResponseStruct>(
      result[0].toTuple()
    );
  }

  try_queryNetworkConnection(
    chainId: BigInt
  ): ethereum.CallResult<
    Registrar__queryNetworkConnectionResultResponseStruct
  > {
    let result = super.tryCall(
      "queryNetworkConnection",
      "queryNetworkConnection(uint256):((string,uint256,address,address,string,string,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(chainId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registrar__queryNetworkConnectionResultResponseStruct>(
        value[0].toTuple()
      )
    );
  }

  queryTokenPriceFeed(token: Address): Address {
    let result = super.call(
      "queryTokenPriceFeed",
      "queryTokenPriceFeed(address):(address)",
      [ethereum.Value.fromAddress(token)]
    );

    return result[0].toAddress();
  }

  try_queryTokenPriceFeed(token: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "queryTokenPriceFeed",
      "queryTokenPriceFeed(address):(address)",
      [ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get details(): InitializeCallDetailsStruct {
    return changetype<InitializeCallDetailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallDetailsStruct extends ethereum.Tuple {
  get treasury(): Address {
    return this[0].toAddress();
  }

  get splitToLiquid(): InitializeCallDetailsSplitToLiquidStruct {
    return changetype<InitializeCallDetailsSplitToLiquidStruct>(
      this[1].toTuple()
    );
  }

  get router(): Address {
    return this[2].toAddress();
  }

  get axelarGateway(): Address {
    return this[3].toAddress();
  }

  get axelarGasRecv(): Address {
    return this[4].toAddress();
  }
}

export class InitializeCallDetailsSplitToLiquidStruct extends ethereum.Tuple {
  get max(): BigInt {
    return this[0].toBigInt();
  }

  get min(): BigInt {
    return this[1].toBigInt();
  }

  get defaultSplit(): BigInt {
    return this[2].toBigInt();
  }
}

export class Initialize1Call extends ethereum.Call {
  get inputs(): Initialize1Call__Inputs {
    return new Initialize1Call__Inputs(this);
  }

  get outputs(): Initialize1Call__Outputs {
    return new Initialize1Call__Outputs(this);
  }
}

export class Initialize1Call__Inputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}

export class Initialize1Call__Outputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAPGoldfinchParamsCall extends ethereum.Call {
  get inputs(): SetAPGoldfinchParamsCall__Inputs {
    return new SetAPGoldfinchParamsCall__Inputs(this);
  }

  get outputs(): SetAPGoldfinchParamsCall__Outputs {
    return new SetAPGoldfinchParamsCall__Outputs(this);
  }
}

export class SetAPGoldfinchParamsCall__Inputs {
  _call: SetAPGoldfinchParamsCall;

  constructor(call: SetAPGoldfinchParamsCall) {
    this._call = call;
  }

  get _apGoldfinch(): SetAPGoldfinchParamsCall_apGoldfinchStruct {
    return changetype<SetAPGoldfinchParamsCall_apGoldfinchStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetAPGoldfinchParamsCall__Outputs {
  _call: SetAPGoldfinchParamsCall;

  constructor(call: SetAPGoldfinchParamsCall) {
    this._call = call;
  }
}

export class SetAPGoldfinchParamsCall_apGoldfinchStruct extends ethereum.Tuple {
  get crvParams(): SetAPGoldfinchParamsCall_apGoldfinchCrvParamsStruct {
    return changetype<SetAPGoldfinchParamsCall_apGoldfinchCrvParamsStruct>(
      this[0].toTuple()
    );
  }
}

export class SetAPGoldfinchParamsCall_apGoldfinchCrvParamsStruct extends ethereum.Tuple {
  get allowedSlippage(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetAccountsContractAddressByChainCall extends ethereum.Call {
  get inputs(): SetAccountsContractAddressByChainCall__Inputs {
    return new SetAccountsContractAddressByChainCall__Inputs(this);
  }

  get outputs(): SetAccountsContractAddressByChainCall__Outputs {
    return new SetAccountsContractAddressByChainCall__Outputs(this);
  }
}

export class SetAccountsContractAddressByChainCall__Inputs {
  _call: SetAccountsContractAddressByChainCall;

  constructor(call: SetAccountsContractAddressByChainCall) {
    this._call = call;
  }

  get _chainName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _accountsContractAddress(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetAccountsContractAddressByChainCall__Outputs {
  _call: SetAccountsContractAddressByChainCall;

  constructor(call: SetAccountsContractAddressByChainCall) {
    this._call = call;
  }
}

export class SetAngelProtocolParamsCall extends ethereum.Call {
  get inputs(): SetAngelProtocolParamsCall__Inputs {
    return new SetAngelProtocolParamsCall__Inputs(this);
  }

  get outputs(): SetAngelProtocolParamsCall__Outputs {
    return new SetAngelProtocolParamsCall__Outputs(this);
  }
}

export class SetAngelProtocolParamsCall__Inputs {
  _call: SetAngelProtocolParamsCall;

  constructor(call: SetAngelProtocolParamsCall) {
    this._call = call;
  }

  get _angelProtocolParams(): SetAngelProtocolParamsCall_angelProtocolParamsStruct {
    return changetype<SetAngelProtocolParamsCall_angelProtocolParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetAngelProtocolParamsCall__Outputs {
  _call: SetAngelProtocolParamsCall;

  constructor(call: SetAngelProtocolParamsCall) {
    this._call = call;
  }
}

export class SetAngelProtocolParamsCall_angelProtocolParamsStruct extends ethereum.Tuple {
  get routerAddr(): Address {
    return this[0].toAddress();
  }

  get refundAddr(): Address {
    return this[1].toAddress();
  }
}

export class SetFeeSettingsByFeesTypeCall extends ethereum.Call {
  get inputs(): SetFeeSettingsByFeesTypeCall__Inputs {
    return new SetFeeSettingsByFeesTypeCall__Inputs(this);
  }

  get outputs(): SetFeeSettingsByFeesTypeCall__Outputs {
    return new SetFeeSettingsByFeesTypeCall__Outputs(this);
  }
}

export class SetFeeSettingsByFeesTypeCall__Inputs {
  _call: SetFeeSettingsByFeesTypeCall;

  constructor(call: SetFeeSettingsByFeesTypeCall) {
    this._call = call;
  }

  get _feeType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _rate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _payout(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetFeeSettingsByFeesTypeCall__Outputs {
  _call: SetFeeSettingsByFeesTypeCall;

  constructor(call: SetFeeSettingsByFeesTypeCall) {
    this._call = call;
  }
}

export class SetGasByTokenCall extends ethereum.Call {
  get inputs(): SetGasByTokenCall__Inputs {
    return new SetGasByTokenCall__Inputs(this);
  }

  get outputs(): SetGasByTokenCall__Outputs {
    return new SetGasByTokenCall__Outputs(this);
  }
}

export class SetGasByTokenCall__Inputs {
  _call: SetGasByTokenCall;

  constructor(call: SetGasByTokenCall) {
    this._call = call;
  }

  get _tokenAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gasFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetGasByTokenCall__Outputs {
  _call: SetGasByTokenCall;

  constructor(call: SetGasByTokenCall) {
    this._call = call;
  }
}

export class SetRebalanceParamsCall extends ethereum.Call {
  get inputs(): SetRebalanceParamsCall__Inputs {
    return new SetRebalanceParamsCall__Inputs(this);
  }

  get outputs(): SetRebalanceParamsCall__Outputs {
    return new SetRebalanceParamsCall__Outputs(this);
  }
}

export class SetRebalanceParamsCall__Inputs {
  _call: SetRebalanceParamsCall;

  constructor(call: SetRebalanceParamsCall) {
    this._call = call;
  }

  get _rebalanceParams(): SetRebalanceParamsCall_rebalanceParamsStruct {
    return changetype<SetRebalanceParamsCall_rebalanceParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetRebalanceParamsCall__Outputs {
  _call: SetRebalanceParamsCall;

  constructor(call: SetRebalanceParamsCall) {
    this._call = call;
  }
}

export class SetRebalanceParamsCall_rebalanceParamsStruct extends ethereum.Tuple {
  get rebalanceLiquidProfits(): boolean {
    return this[0].toBoolean();
  }

  get lockedRebalanceToLiquid(): BigInt {
    return this[1].toBigInt();
  }

  get interestDistribution(): BigInt {
    return this[2].toBigInt();
  }

  get lockedPrincipleToLiquid(): boolean {
    return this[3].toBoolean();
  }

  get principleDistribution(): BigInt {
    return this[4].toBigInt();
  }

  get basis(): BigInt {
    return this[5].toBigInt();
  }
}

export class SetStrategyApprovalStateCall extends ethereum.Call {
  get inputs(): SetStrategyApprovalStateCall__Inputs {
    return new SetStrategyApprovalStateCall__Inputs(this);
  }

  get outputs(): SetStrategyApprovalStateCall__Outputs {
    return new SetStrategyApprovalStateCall__Outputs(this);
  }
}

export class SetStrategyApprovalStateCall__Inputs {
  _call: SetStrategyApprovalStateCall;

  constructor(call: SetStrategyApprovalStateCall) {
    this._call = call;
  }

  get _strategyId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _approvalState(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetStrategyApprovalStateCall__Outputs {
  _call: SetStrategyApprovalStateCall;

  constructor(call: SetStrategyApprovalStateCall) {
    this._call = call;
  }
}

export class SetStrategyParamsCall extends ethereum.Call {
  get inputs(): SetStrategyParamsCall__Inputs {
    return new SetStrategyParamsCall__Inputs(this);
  }

  get outputs(): SetStrategyParamsCall__Outputs {
    return new SetStrategyParamsCall__Outputs(this);
  }
}

export class SetStrategyParamsCall__Inputs {
  _call: SetStrategyParamsCall;

  constructor(call: SetStrategyParamsCall) {
    this._call = call;
  }

  get _strategyId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _lockAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _liqAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _approvalState(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class SetStrategyParamsCall__Outputs {
  _call: SetStrategyParamsCall;

  constructor(call: SetStrategyParamsCall) {
    this._call = call;
  }
}

export class SetTokenAcceptedCall extends ethereum.Call {
  get inputs(): SetTokenAcceptedCall__Inputs {
    return new SetTokenAcceptedCall__Inputs(this);
  }

  get outputs(): SetTokenAcceptedCall__Outputs {
    return new SetTokenAcceptedCall__Outputs(this);
  }
}

export class SetTokenAcceptedCall__Inputs {
  _call: SetTokenAcceptedCall;

  constructor(call: SetTokenAcceptedCall) {
    this._call = call;
  }

  get _tokenAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isAccepted(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetTokenAcceptedCall__Outputs {
  _call: SetTokenAcceptedCall;

  constructor(call: SetTokenAcceptedCall) {
    this._call = call;
  }
}

export class SetUniswapAddressesCall extends ethereum.Call {
  get inputs(): SetUniswapAddressesCall__Inputs {
    return new SetUniswapAddressesCall__Inputs(this);
  }

  get outputs(): SetUniswapAddressesCall__Outputs {
    return new SetUniswapAddressesCall__Outputs(this);
  }
}

export class SetUniswapAddressesCall__Inputs {
  _call: SetUniswapAddressesCall;

  constructor(call: SetUniswapAddressesCall) {
    this._call = call;
  }

  get _uniswapRouter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _uniswapFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetUniswapAddressesCall__Outputs {
  _call: SetUniswapAddressesCall;

  constructor(call: SetUniswapAddressesCall) {
    this._call = call;
  }
}

export class SetVaultOperatorApprovedCall extends ethereum.Call {
  get inputs(): SetVaultOperatorApprovedCall__Inputs {
    return new SetVaultOperatorApprovedCall__Inputs(this);
  }

  get outputs(): SetVaultOperatorApprovedCall__Outputs {
    return new SetVaultOperatorApprovedCall__Outputs(this);
  }
}

export class SetVaultOperatorApprovedCall__Inputs {
  _call: SetVaultOperatorApprovedCall;

  constructor(call: SetVaultOperatorApprovedCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isApproved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetVaultOperatorApprovedCall__Outputs {
  _call: SetVaultOperatorApprovedCall;

  constructor(call: SetVaultOperatorApprovedCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateConfigCall extends ethereum.Call {
  get inputs(): UpdateConfigCall__Inputs {
    return new UpdateConfigCall__Inputs(this);
  }

  get outputs(): UpdateConfigCall__Outputs {
    return new UpdateConfigCall__Outputs(this);
  }
}

export class UpdateConfigCall__Inputs {
  _call: UpdateConfigCall;

  constructor(call: UpdateConfigCall) {
    this._call = call;
  }

  get details(): UpdateConfigCallDetailsStruct {
    return changetype<UpdateConfigCallDetailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class UpdateConfigCall__Outputs {
  _call: UpdateConfigCall;

  constructor(call: UpdateConfigCall) {
    this._call = call;
  }
}

export class UpdateConfigCallDetailsStruct extends ethereum.Tuple {
  get accountsContract(): Address {
    return this[0].toAddress();
  }

  get approved_charities(): Array<string> {
    return this[1].toStringArray();
  }

  get splitMax(): BigInt {
    return this[2].toBigInt();
  }

  get splitMin(): BigInt {
    return this[3].toBigInt();
  }

  get splitDefault(): BigInt {
    return this[4].toBigInt();
  }

  get collectorShare(): BigInt {
    return this[5].toBigInt();
  }

  get indexFundContract(): Address {
    return this[6].toAddress();
  }

  get govContract(): Address {
    return this[7].toAddress();
  }

  get treasury(): Address {
    return this[8].toAddress();
  }

  get donationMatchCharitesContract(): Address {
    return this[9].toAddress();
  }

  get donationMatchEmitter(): Address {
    return this[10].toAddress();
  }

  get haloToken(): Address {
    return this[11].toAddress();
  }

  get haloTokenLpContract(): Address {
    return this[12].toAddress();
  }

  get charitySharesContract(): Address {
    return this[13].toAddress();
  }

  get fundraisingContract(): Address {
    return this[14].toAddress();
  }

  get applicationsReview(): Address {
    return this[15].toAddress();
  }

  get uniswapRouter(): Address {
    return this[16].toAddress();
  }

  get uniswapFactory(): Address {
    return this[17].toAddress();
  }

  get multisigFactory(): Address {
    return this[18].toAddress();
  }

  get multisigEmitter(): Address {
    return this[19].toAddress();
  }

  get charityProposal(): Address {
    return this[20].toAddress();
  }

  get lockedWithdrawal(): Address {
    return this[21].toAddress();
  }

  get proxyAdmin(): Address {
    return this[22].toAddress();
  }

  get usdcAddress(): Address {
    return this[23].toAddress();
  }

  get wMaticAddress(): Address {
    return this[24].toAddress();
  }

  get subdaoGovContract(): Address {
    return this[25].toAddress();
  }

  get subdaoTokenContract(): Address {
    return this[26].toAddress();
  }

  get subdaoBondingTokenContract(): Address {
    return this[27].toAddress();
  }

  get subdaoCw900Contract(): Address {
    return this[28].toAddress();
  }

  get subdaoDistributorContract(): Address {
    return this[29].toAddress();
  }

  get subdaoEmitter(): Address {
    return this[30].toAddress();
  }

  get donationMatchContract(): Address {
    return this[31].toAddress();
  }

  get cw900lvAddress(): Address {
    return this[32].toAddress();
  }
}

export class UpdateNetworkConnectionsCall extends ethereum.Call {
  get inputs(): UpdateNetworkConnectionsCall__Inputs {
    return new UpdateNetworkConnectionsCall__Inputs(this);
  }

  get outputs(): UpdateNetworkConnectionsCall__Outputs {
    return new UpdateNetworkConnectionsCall__Outputs(this);
  }
}

export class UpdateNetworkConnectionsCall__Inputs {
  _call: UpdateNetworkConnectionsCall;

  constructor(call: UpdateNetworkConnectionsCall) {
    this._call = call;
  }

  get networkInfo(): UpdateNetworkConnectionsCallNetworkInfoStruct {
    return changetype<UpdateNetworkConnectionsCallNetworkInfoStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get action(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateNetworkConnectionsCall__Outputs {
  _call: UpdateNetworkConnectionsCall;

  constructor(call: UpdateNetworkConnectionsCall) {
    this._call = call;
  }
}

export class UpdateNetworkConnectionsCallNetworkInfoStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get chainId(): BigInt {
    return this[1].toBigInt();
  }

  get router(): Address {
    return this[2].toAddress();
  }

  get axelarGateway(): Address {
    return this[3].toAddress();
  }

  get ibcChannel(): string {
    return this[4].toString();
  }

  get transferChannel(): string {
    return this[5].toString();
  }

  get gasReceiver(): Address {
    return this[6].toAddress();
  }

  get gasLimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class UpdateTokenPriceFeedCall extends ethereum.Call {
  get inputs(): UpdateTokenPriceFeedCall__Inputs {
    return new UpdateTokenPriceFeedCall__Inputs(this);
  }

  get outputs(): UpdateTokenPriceFeedCall__Outputs {
    return new UpdateTokenPriceFeedCall__Outputs(this);
  }
}

export class UpdateTokenPriceFeedCall__Inputs {
  _call: UpdateTokenPriceFeedCall;

  constructor(call: UpdateTokenPriceFeedCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get priceFeed(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateTokenPriceFeedCall__Outputs {
  _call: UpdateTokenPriceFeedCall;

  constructor(call: UpdateTokenPriceFeedCall) {
    this._call = call;
  }
}
