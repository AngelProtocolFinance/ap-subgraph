// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get endowId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sharesReceived(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get endowId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VaultConfigUpdated extends ethereum.Event {
  get params(): VaultConfigUpdated__Params {
    return new VaultConfigUpdated__Params(this);
  }
}

export class VaultConfigUpdated__Params {
  _event: VaultConfigUpdated;

  constructor(event: VaultConfigUpdated) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get config(): VaultConfigUpdatedConfigStruct {
    return changetype<VaultConfigUpdatedConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class VaultConfigUpdatedConfigStruct extends ethereum.Tuple {
  get strategy(): Address {
    return this[0].toAddress();
  }

  get registrar(): Address {
    return this[1].toAddress();
  }
}

export class VaultCreated extends ethereum.Event {
  get params(): VaultCreated__Params {
    return new VaultCreated__Params(this);
  }
}

export class VaultCreated__Params {
  _event: VaultCreated;

  constructor(event: VaultCreated) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get config(): VaultCreatedConfigStruct {
    return changetype<VaultCreatedConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class VaultCreatedConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategyId(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }
}

export class VaultEmitter extends ethereum.SmartContract {
  static bind(address: Address): VaultEmitter {
    return new VaultEmitter("VaultEmitter", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get endowId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get sharesReceived(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get endowId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get shares(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amountRedeemed(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VaultConfigUpdatedCall extends ethereum.Call {
  get inputs(): VaultConfigUpdatedCall__Inputs {
    return new VaultConfigUpdatedCall__Inputs(this);
  }

  get outputs(): VaultConfigUpdatedCall__Outputs {
    return new VaultConfigUpdatedCall__Outputs(this);
  }
}

export class VaultConfigUpdatedCall__Inputs {
  _call: VaultConfigUpdatedCall;

  constructor(call: VaultConfigUpdatedCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get config(): VaultConfigUpdatedCallConfigStruct {
    return changetype<VaultConfigUpdatedCallConfigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class VaultConfigUpdatedCall__Outputs {
  _call: VaultConfigUpdatedCall;

  constructor(call: VaultConfigUpdatedCall) {
    this._call = call;
  }
}

export class VaultConfigUpdatedCallConfigStruct extends ethereum.Tuple {
  get strategy(): Address {
    return this[0].toAddress();
  }

  get registrar(): Address {
    return this[1].toAddress();
  }
}

export class VaultCreatedCall extends ethereum.Call {
  get inputs(): VaultCreatedCall__Inputs {
    return new VaultCreatedCall__Inputs(this);
  }

  get outputs(): VaultCreatedCall__Outputs {
    return new VaultCreatedCall__Outputs(this);
  }
}

export class VaultCreatedCall__Inputs {
  _call: VaultCreatedCall;

  constructor(call: VaultCreatedCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get config(): VaultCreatedCallConfigStruct {
    return changetype<VaultCreatedCallConfigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class VaultCreatedCall__Outputs {
  _call: VaultCreatedCall;

  constructor(call: VaultCreatedCall) {
    this._call = call;
  }
}

export class VaultCreatedCallConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategyId(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }
}
