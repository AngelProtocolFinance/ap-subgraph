// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vaultType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get tokenDeposited(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amtDeposited(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vaultType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get tokenRedeemed(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amtRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RewardsHarvested extends ethereum.Event {
  get params(): RewardsHarvested__Params {
    return new RewardsHarvested__Params(this);
  }
}

export class RewardsHarvested__Params {
  _event: RewardsHarvested;

  constructor(event: RewardsHarvested) {
    this._event = event;
  }

  get accountIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }
}

export class VaultConfigUpdated extends ethereum.Event {
  get params(): VaultConfigUpdated__Params {
    return new VaultConfigUpdated__Params(this);
  }
}

export class VaultConfigUpdated__Params {
  _event: VaultConfigUpdated;

  constructor(event: VaultConfigUpdated) {
    this._event = event;
  }

  get config(): VaultConfigUpdatedConfigStruct {
    return changetype<VaultConfigUpdatedConfigStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class VaultConfigUpdatedConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategySelector(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}

export class Vault__getVaultConfigResultValue0Struct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategySelector(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}

export class Vault extends ethereum.SmartContract {
  static bind(address: Address): Vault {
    return new Vault("Vault", address);
  }

  getVaultConfig(): Vault__getVaultConfigResultValue0Struct {
    let result = super.call(
      "getVaultConfig",
      "getVaultConfig():((uint8,bytes4,address,address,address,address,string,string,address))",
      []
    );

    return changetype<Vault__getVaultConfigResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getVaultConfig(): ethereum.CallResult<
    Vault__getVaultConfigResultValue0Struct
  > {
    let result = super.tryCall(
      "getVaultConfig",
      "getVaultConfig():((uint8,bytes4,address,address,address,address,string,string,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Vault__getVaultConfigResultValue0Struct>(value[0].toTuple())
    );
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class HarvestCall extends ethereum.Call {
  get inputs(): HarvestCall__Inputs {
    return new HarvestCall__Inputs(this);
  }

  get outputs(): HarvestCall__Outputs {
    return new HarvestCall__Outputs(this);
  }
}

export class HarvestCall__Inputs {
  _call: HarvestCall;

  constructor(call: HarvestCall) {
    this._call = call;
  }

  get accountIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class HarvestCall__Outputs {
  _call: HarvestCall;

  constructor(call: HarvestCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get value0(): RedeemCallValue0Struct {
    return changetype<RedeemCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class RedeemCallValue0Struct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get status(): i32 {
    return this[2].toI32();
  }
}

export class RedeemAllCall extends ethereum.Call {
  get inputs(): RedeemAllCall__Inputs {
    return new RedeemAllCall__Inputs(this);
  }

  get outputs(): RedeemAllCall__Outputs {
    return new RedeemAllCall__Outputs(this);
  }
}

export class RedeemAllCall__Inputs {
  _call: RedeemAllCall;

  constructor(call: RedeemAllCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemAllCall__Outputs {
  _call: RedeemAllCall;

  constructor(call: RedeemAllCall) {
    this._call = call;
  }

  get value0(): RedeemAllCallValue0Struct {
    return changetype<RedeemAllCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class RedeemAllCallValue0Struct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get status(): i32 {
    return this[2].toI32();
  }
}

export class SetVaultConfigCall extends ethereum.Call {
  get inputs(): SetVaultConfigCall__Inputs {
    return new SetVaultConfigCall__Inputs(this);
  }

  get outputs(): SetVaultConfigCall__Outputs {
    return new SetVaultConfigCall__Outputs(this);
  }
}

export class SetVaultConfigCall__Inputs {
  _call: SetVaultConfigCall;

  constructor(call: SetVaultConfigCall) {
    this._call = call;
  }

  get _newConfig(): SetVaultConfigCall_newConfigStruct {
    return changetype<SetVaultConfigCall_newConfigStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetVaultConfigCall__Outputs {
  _call: SetVaultConfigCall;

  constructor(call: SetVaultConfigCall) {
    this._call = call;
  }
}

export class SetVaultConfigCall_newConfigStruct extends ethereum.Tuple {
  get vaultType(): i32 {
    return this[0].toI32();
  }

  get strategySelector(): Bytes {
    return this[1].toBytes();
  }

  get strategy(): Address {
    return this[2].toAddress();
  }

  get registrar(): Address {
    return this[3].toAddress();
  }

  get baseToken(): Address {
    return this[4].toAddress();
  }

  get yieldToken(): Address {
    return this[5].toAddress();
  }

  get apTokenName(): string {
    return this[6].toString();
  }

  get apTokenSymbol(): string {
    return this[7].toString();
  }

  get admin(): Address {
    return this[8].toAddress();
  }
}
