// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContractInstantiated extends ethereum.Event {
  get params(): ContractInstantiated__Params {
    return new ContractInstantiated__Params(this);
  }
}

export class ContractInstantiated__Params {
  _event: ContractInstantiated;

  constructor(event: ContractInstantiated) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get instantiation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ImplementationUpdated extends ethereum.Event {
  get params(): ImplementationUpdated__Params {
    return new ImplementationUpdated__Params(this);
  }
}

export class ImplementationUpdated__Params {
  _event: ImplementationUpdated;

  constructor(event: ImplementationUpdated) {
    this._event = event;
  }

  get implementationAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyAdminUpdated extends ethereum.Event {
  get params(): ProxyAdminUpdated__Params {
    return new ProxyAdminUpdated__Params(this);
  }
}

export class ProxyAdminUpdated__Params {
  _event: ProxyAdminUpdated;

  constructor(event: ProxyAdminUpdated) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EndowmentMultiSigFactory extends ethereum.SmartContract {
  static bind(address: Address): EndowmentMultiSigFactory {
    return new EndowmentMultiSigFactory("EndowmentMultiSigFactory", address);
  }

  create(
    endowmentId: BigInt,
    emitterAddress: Address,
    owners: Array<Address>,
    required: BigInt,
    transactionExpiry: BigInt
  ): Address {
    let result = super.call(
      "create",
      "create(uint256,address,address[],uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(endowmentId),
        ethereum.Value.fromAddress(emitterAddress),
        ethereum.Value.fromAddressArray(owners),
        ethereum.Value.fromUnsignedBigInt(required),
        ethereum.Value.fromUnsignedBigInt(transactionExpiry)
      ]
    );

    return result[0].toAddress();
  }

  try_create(
    endowmentId: BigInt,
    emitterAddress: Address,
    owners: Array<Address>,
    required: BigInt,
    transactionExpiry: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "create",
      "create(uint256,address,address[],uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(endowmentId),
        ethereum.Value.fromAddress(emitterAddress),
        ethereum.Value.fromAddressArray(owners),
        ethereum.Value.fromUnsignedBigInt(required),
        ethereum.Value.fromUnsignedBigInt(transactionExpiry)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  endowmentIdToMultisig(param0: BigInt): Address {
    let result = super.call(
      "endowmentIdToMultisig",
      "endowmentIdToMultisig(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_endowmentIdToMultisig(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "endowmentIdToMultisig",
      "endowmentIdToMultisig(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getInstantiationCount(creator: Address): BigInt {
    let result = super.call(
      "getInstantiationCount",
      "getInstantiationCount(address):(uint256)",
      [ethereum.Value.fromAddress(creator)]
    );

    return result[0].toBigInt();
  }

  try_getInstantiationCount(creator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getInstantiationCount",
      "getInstantiationCount(address):(uint256)",
      [ethereum.Value.fromAddress(creator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  instantiations(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "instantiations",
      "instantiations(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_instantiations(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "instantiations",
      "instantiations(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isInstantiation(param0: Address): boolean {
    let result = super.call(
      "isInstantiation",
      "isInstantiation(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_isInstantiation(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInstantiation",
      "isInstantiation(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get implementationAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get proxyAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get endowmentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get emitterAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get owners(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get required(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get transactionExpiry(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateImplementationCall extends ethereum.Call {
  get inputs(): UpdateImplementationCall__Inputs {
    return new UpdateImplementationCall__Inputs(this);
  }

  get outputs(): UpdateImplementationCall__Outputs {
    return new UpdateImplementationCall__Outputs(this);
  }
}

export class UpdateImplementationCall__Inputs {
  _call: UpdateImplementationCall;

  constructor(call: UpdateImplementationCall) {
    this._call = call;
  }

  get implementationAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateImplementationCall__Outputs {
  _call: UpdateImplementationCall;

  constructor(call: UpdateImplementationCall) {
    this._call = call;
  }
}

export class UpdateProxyAdminCall extends ethereum.Call {
  get inputs(): UpdateProxyAdminCall__Inputs {
    return new UpdateProxyAdminCall__Inputs(this);
  }

  get outputs(): UpdateProxyAdminCall__Outputs {
    return new UpdateProxyAdminCall__Outputs(this);
  }
}

export class UpdateProxyAdminCall__Inputs {
  _call: UpdateProxyAdminCall;

  constructor(call: UpdateProxyAdminCall) {
    this._call = call;
  }

  get proxyAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateProxyAdminCall__Outputs {
  _call: UpdateProxyAdminCall;

  constructor(call: UpdateProxyAdminCall) {
    this._call = call;
  }
}
