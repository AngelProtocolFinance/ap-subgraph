// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class addVault extends ethereum.Event {
  get params(): addVault__Params {
    return new addVault__Params(this);
  }
}

export class addVault__Params {
  _event: addVault;

  constructor(event: addVault) {
    this._event = event;
  }

  get strategyName(): string {
    return this._event.parameters[0].value.toString();
  }

  get vault(): addVaultVaultStruct {
    return changetype<addVaultVaultStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class addVaultVaultStruct extends ethereum.Tuple {
  get addr(): string {
    return this[0].toString();
  }

  get network(): BigInt {
    return this[1].toBigInt();
  }

  get input_denom(): Address {
    return this[2].toAddress();
  }

  get yield_token(): Address {
    return this[3].toAddress();
  }

  get approved(): boolean {
    return this[4].toBoolean();
  }

  get restricted_from(): Array<i32> {
    return this[5].toI32Array();
  }

  get acct_type(): i32 {
    return this[6].toI32();
  }

  get vault_type(): i32 {
    return this[7].toI32();
  }
}

export class deleteNetworkConnection extends ethereum.Event {
  get params(): deleteNetworkConnection__Params {
    return new deleteNetworkConnection__Params(this);
  }
}

export class deleteNetworkConnection__Params {
  _event: deleteNetworkConnection;

  constructor(event: deleteNetworkConnection) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class postNetworkConnection extends ethereum.Event {
  get params(): postNetworkConnection__Params {
    return new postNetworkConnection__Params(this);
  }
}

export class postNetworkConnection__Params {
  _event: postNetworkConnection;

  constructor(event: postNetworkConnection) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get networkInfo(): postNetworkConnectionNetworkInfoStruct {
    return changetype<postNetworkConnectionNetworkInfoStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class postNetworkConnectionNetworkInfoStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get chain_id(): BigInt {
    return this[1].toBigInt();
  }

  get router(): Address {
    return this[2].toAddress();
  }

  get axelerGateway(): Address {
    return this[3].toAddress();
  }

  get ibc_channel(): string {
    return this[4].toString();
  }

  get transfer_channel(): string {
    return this[5].toString();
  }

  get ibc_host_contract(): Address {
    return this[6].toAddress();
  }

  get gas_limit(): BigInt {
    return this[7].toBigInt();
  }
}

export class removeVault extends ethereum.Event {
  get params(): removeVault__Params {
    return new removeVault__Params(this);
  }
}

export class removeVault__Params {
  _event: removeVault;

  constructor(event: removeVault) {
    this._event = event;
  }

  get strategyName(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class updateRegistrarConfig extends ethereum.Event {
  get params(): updateRegistrarConfig__Params {
    return new updateRegistrarConfig__Params(this);
  }
}

export class updateRegistrarConfig__Params {
  _event: updateRegistrarConfig;

  constructor(event: updateRegistrarConfig) {
    this._event = event;
  }

  get details(): updateRegistrarConfigDetailsStruct {
    return changetype<updateRegistrarConfigDetailsStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class updateRegistrarConfigDetailsStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get applications_review(): Address {
    return this[1].toAddress();
  }

  get index_fund_contract(): Address {
    return this[2].toAddress();
  }

  get accounts_contract(): Address {
    return this[3].toAddress();
  }

  get treasury(): Address {
    return this[4].toAddress();
  }

  get subdao_gov_code(): Address {
    return this[5].toAddress();
  }

  get subdao_cw20_token_code(): Address {
    return this[6].toAddress();
  }

  get subdao_bonding_token_code(): Address {
    return this[7].toAddress();
  }

  get subdao_cw900_code(): Address {
    return this[8].toAddress();
  }

  get subdao_distributor_code(): Address {
    return this[9].toAddress();
  }

  get subdao_emitter(): Address {
    return this[10].toAddress();
  }

  get donation_match_code(): Address {
    return this[11].toAddress();
  }

  get donation_match_charites_contract(): Address {
    return this[12].toAddress();
  }

  get donation_match_emitter(): Address {
    return this[13].toAddress();
  }

  get split_to_liquid(): updateRegistrarConfigDetailsSplit_to_liquidStruct {
    return changetype<updateRegistrarConfigDetailsSplit_to_liquidStruct>(
      this[14].toTuple()
    );
  }

  get halo_token(): Address {
    return this[15].toAddress();
  }

  get halo_token_lp_contract(): Address {
    return this[16].toAddress();
  }

  get gov_contract(): Address {
    return this[17].toAddress();
  }

  get collector_addr(): Address {
    return this[18].toAddress();
  }

  get collector_share(): BigInt {
    return this[19].toBigInt();
  }

  get charity_shares_contract(): Address {
    return this[20].toAddress();
  }

  get accepted_tokens(): updateRegistrarConfigDetailsAccepted_tokensStruct {
    return changetype<updateRegistrarConfigDetailsAccepted_tokensStruct>(
      this[21].toTuple()
    );
  }

  get fundraising_contract(): Address {
    return this[22].toAddress();
  }

  get rebalance(): updateRegistrarConfigDetailsRebalanceStruct {
    return changetype<updateRegistrarConfigDetailsRebalanceStruct>(
      this[23].toTuple()
    );
  }

  get swaps_router(): Address {
    return this[24].toAddress();
  }

  get multisig_factory(): Address {
    return this[25].toAddress();
  }

  get multisig_emitter(): Address {
    return this[26].toAddress();
  }

  get charity_proposal(): Address {
    return this[27].toAddress();
  }

  get locked_withdrawal(): Address {
    return this[28].toAddress();
  }

  get proxy_admin(): Address {
    return this[29].toAddress();
  }

  get USDC_address(): Address {
    return this[30].toAddress();
  }

  get Weth_address(): Address {
    return this[31].toAddress();
  }

  get cw900lv_address(): Address {
    return this[32].toAddress();
  }
}

export class updateRegistrarConfigDetailsSplit_to_liquidStruct extends ethereum.Tuple {
  get max(): BigInt {
    return this[0].toBigInt();
  }

  get min(): BigInt {
    return this[1].toBigInt();
  }

  get defaultSplit(): BigInt {
    return this[2].toBigInt();
  }
}

export class updateRegistrarConfigDetailsAccepted_tokensStruct extends ethereum.Tuple {
  get cw20(): Array<Address> {
    return this[0].toAddressArray();
  }
}

export class updateRegistrarConfigDetailsRebalanceStruct extends ethereum.Tuple {
  get rebalance_liquid_invested_profits(): boolean {
    return this[0].toBoolean();
  }

  get locked_interests_to_liquid(): boolean {
    return this[1].toBoolean();
  }

  get interest_distribution(): BigInt {
    return this[2].toBigInt();
  }

  get locked_principle_to_liquid(): boolean {
    return this[3].toBoolean();
  }

  get principle_distribution(): BigInt {
    return this[4].toBigInt();
  }
}

export class updateRegistrarFees extends ethereum.Event {
  get params(): updateRegistrarFees__Params {
    return new updateRegistrarFees__Params(this);
  }
}

export class updateRegistrarFees__Params {
  _event: updateRegistrarFees;

  constructor(event: updateRegistrarFees) {
    this._event = event;
  }

  get details(): updateRegistrarFeesDetailsStruct {
    return changetype<updateRegistrarFeesDetailsStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class updateRegistrarFeesDetailsStruct extends ethereum.Tuple {
  get keys(): Array<string> {
    return this[0].toStringArray();
  }

  get values(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class updateRegistrarOwner extends ethereum.Event {
  get params(): updateRegistrarOwner__Params {
    return new updateRegistrarOwner__Params(this);
  }
}

export class updateRegistrarOwner__Params {
  _event: updateRegistrarOwner;

  constructor(event: updateRegistrarOwner) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class updateVault extends ethereum.Event {
  get params(): updateVault__Params {
    return new updateVault__Params(this);
  }
}

export class updateVault__Params {
  _event: updateVault;

  constructor(event: updateVault) {
    this._event = event;
  }

  get strategyName(): string {
    return this._event.parameters[0].value.toString();
  }

  get approved(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get endowmentTypes(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class registrar__query_configResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get applications_review(): Address {
    return this[1].toAddress();
  }

  get index_fund_contract(): Address {
    return this[2].toAddress();
  }

  get accounts_contract(): Address {
    return this[3].toAddress();
  }

  get treasury(): Address {
    return this[4].toAddress();
  }

  get subdao_gov_code(): Address {
    return this[5].toAddress();
  }

  get subdao_cw20_token_code(): Address {
    return this[6].toAddress();
  }

  get subdao_bonding_token_code(): Address {
    return this[7].toAddress();
  }

  get subdao_cw900_code(): Address {
    return this[8].toAddress();
  }

  get subdao_distributor_code(): Address {
    return this[9].toAddress();
  }

  get subdao_emitter(): Address {
    return this[10].toAddress();
  }

  get donation_match_code(): Address {
    return this[11].toAddress();
  }

  get donation_match_charites_contract(): Address {
    return this[12].toAddress();
  }

  get donation_match_emitter(): Address {
    return this[13].toAddress();
  }

  get split_to_liquid(): registrar__query_configResultValue0Split_to_liquidStruct {
    return changetype<registrar__query_configResultValue0Split_to_liquidStruct>(
      this[14].toTuple()
    );
  }

  get halo_token(): Address {
    return this[15].toAddress();
  }

  get halo_token_lp_contract(): Address {
    return this[16].toAddress();
  }

  get gov_contract(): Address {
    return this[17].toAddress();
  }

  get collector_addr(): Address {
    return this[18].toAddress();
  }

  get collector_share(): BigInt {
    return this[19].toBigInt();
  }

  get charity_shares_contract(): Address {
    return this[20].toAddress();
  }

  get accepted_tokens(): registrar__query_configResultValue0Accepted_tokensStruct {
    return changetype<registrar__query_configResultValue0Accepted_tokensStruct>(
      this[21].toTuple()
    );
  }

  get fundraising_contract(): Address {
    return this[22].toAddress();
  }

  get rebalance(): registrar__query_configResultValue0RebalanceStruct {
    return changetype<registrar__query_configResultValue0RebalanceStruct>(
      this[23].toTuple()
    );
  }

  get swaps_router(): Address {
    return this[24].toAddress();
  }

  get multisig_factory(): Address {
    return this[25].toAddress();
  }

  get multisig_emitter(): Address {
    return this[26].toAddress();
  }

  get charity_proposal(): Address {
    return this[27].toAddress();
  }

  get locked_withdrawal(): Address {
    return this[28].toAddress();
  }

  get proxy_admin(): Address {
    return this[29].toAddress();
  }

  get USDC_address(): Address {
    return this[30].toAddress();
  }

  get Weth_address(): Address {
    return this[31].toAddress();
  }

  get cw900lv_address(): Address {
    return this[32].toAddress();
  }
}

export class registrar__query_configResultValue0Split_to_liquidStruct extends ethereum.Tuple {
  get max(): BigInt {
    return this[0].toBigInt();
  }

  get min(): BigInt {
    return this[1].toBigInt();
  }

  get defaultSplit(): BigInt {
    return this[2].toBigInt();
  }
}

export class registrar__query_configResultValue0Accepted_tokensStruct extends ethereum.Tuple {
  get cw20(): Array<Address> {
    return this[0].toAddressArray();
  }
}

export class registrar__query_configResultValue0RebalanceStruct extends ethereum.Tuple {
  get rebalance_liquid_invested_profits(): boolean {
    return this[0].toBoolean();
  }

  get locked_interests_to_liquid(): boolean {
    return this[1].toBoolean();
  }

  get interest_distribution(): BigInt {
    return this[2].toBigInt();
  }

  get locked_principle_to_liquid(): boolean {
    return this[3].toBoolean();
  }

  get principle_distribution(): BigInt {
    return this[4].toBigInt();
  }
}

export class registrar__query_network_connectionResultResponseStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get chain_id(): BigInt {
    return this[1].toBigInt();
  }

  get router(): Address {
    return this[2].toAddress();
  }

  get axelerGateway(): Address {
    return this[3].toAddress();
  }

  get ibc_channel(): string {
    return this[4].toString();
  }

  get transfer_channel(): string {
    return this[5].toString();
  }

  get ibc_host_contract(): Address {
    return this[6].toAddress();
  }

  get gas_limit(): BigInt {
    return this[7].toBigInt();
  }
}

export class registrar__query_vault_detailsResultResponseStruct extends ethereum.Tuple {
  get addr(): string {
    return this[0].toString();
  }

  get network(): BigInt {
    return this[1].toBigInt();
  }

  get input_denom(): Address {
    return this[2].toAddress();
  }

  get yield_token(): Address {
    return this[3].toAddress();
  }

  get approved(): boolean {
    return this[4].toBoolean();
  }

  get restricted_from(): Array<i32> {
    return this[5].toI32Array();
  }

  get acct_type(): i32 {
    return this[6].toI32();
  }

  get vault_type(): i32 {
    return this[7].toI32();
  }
}

export class registrar__query_vault_listResultValue0Struct extends ethereum.Tuple {
  get addr(): string {
    return this[0].toString();
  }

  get network(): BigInt {
    return this[1].toBigInt();
  }

  get input_denom(): Address {
    return this[2].toAddress();
  }

  get yield_token(): Address {
    return this[3].toAddress();
  }

  get approved(): boolean {
    return this[4].toBoolean();
  }

  get restricted_from(): Array<i32> {
    return this[5].toI32Array();
  }

  get acct_type(): i32 {
    return this[6].toI32();
  }

  get vault_type(): i32 {
    return this[7].toI32();
  }
}

export class registrar__query_vault_list_depResultValue0Struct extends ethereum.Tuple {
  get addr(): string {
    return this[0].toString();
  }

  get network(): BigInt {
    return this[1].toBigInt();
  }

  get input_denom(): Address {
    return this[2].toAddress();
  }

  get yield_token(): Address {
    return this[3].toAddress();
  }

  get approved(): boolean {
    return this[4].toBoolean();
  }

  get restricted_from(): Array<i32> {
    return this[5].toI32Array();
  }

  get acct_type(): i32 {
    return this[6].toI32();
  }

  get vault_type(): i32 {
    return this[7].toI32();
  }
}

export class registrar extends ethereum.SmartContract {
  static bind(address: Address): registrar {
    return new registrar("registrar", address);
  }

  query_config(): registrar__query_configResultValue0Struct {
    let result = super.call(
      "query_config",
      "query_config():((address,address,address,address,address,address,address,address,address,address,address,address,address,address,(uint256,uint256,uint256),address,address,address,address,uint256,address,(address[]),address,(bool,bool,uint256,bool,uint256),address,address,address,address,address,address,address,address,address))",
      []
    );

    return changetype<registrar__query_configResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_query_config(): ethereum.CallResult<
    registrar__query_configResultValue0Struct
  > {
    let result = super.tryCall(
      "query_config",
      "query_config():((address,address,address,address,address,address,address,address,address,address,address,address,address,address,(uint256,uint256,uint256),address,address,address,address,uint256,address,(address[]),address,(bool,bool,uint256,bool,uint256),address,address,address,address,address,address,address,address,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<registrar__query_configResultValue0Struct>(value[0].toTuple())
    );
  }

  query_fee(name: string): BigInt {
    let result = super.call("query_fee", "query_fee(string):(uint256)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toBigInt();
  }

  try_query_fee(name: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("query_fee", "query_fee(string):(uint256)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  query_network_connection(
    chain_id: BigInt
  ): registrar__query_network_connectionResultResponseStruct {
    let result = super.call(
      "query_network_connection",
      "query_network_connection(uint256):((string,uint256,address,address,string,string,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(chain_id)]
    );

    return changetype<registrar__query_network_connectionResultResponseStruct>(
      result[0].toTuple()
    );
  }

  try_query_network_connection(
    chain_id: BigInt
  ): ethereum.CallResult<
    registrar__query_network_connectionResultResponseStruct
  > {
    let result = super.tryCall(
      "query_network_connection",
      "query_network_connection(uint256):((string,uint256,address,address,string,string,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(chain_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<registrar__query_network_connectionResultResponseStruct>(
        value[0].toTuple()
      )
    );
  }

  query_vault_details(
    _stratagyName: string
  ): registrar__query_vault_detailsResultResponseStruct {
    let result = super.call(
      "query_vault_details",
      "query_vault_details(string):((string,uint256,address,address,bool,uint8[],uint8,uint8))",
      [ethereum.Value.fromString(_stratagyName)]
    );

    return changetype<registrar__query_vault_detailsResultResponseStruct>(
      result[0].toTuple()
    );
  }

  try_query_vault_details(
    _stratagyName: string
  ): ethereum.CallResult<registrar__query_vault_detailsResultResponseStruct> {
    let result = super.tryCall(
      "query_vault_details",
      "query_vault_details(string):((string,uint256,address,address,bool,uint8[],uint8,uint8))",
      [ethereum.Value.fromString(_stratagyName)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<registrar__query_vault_detailsResultResponseStruct>(
        value[0].toTuple()
      )
    );
  }

  query_vault_list(
    network: BigInt,
    endowment_type: i32,
    account_type: i32,
    vault_type: i32,
    approved: i32,
    start_after: BigInt,
    limit: BigInt
  ): Array<registrar__query_vault_listResultValue0Struct> {
    let result = super.call(
      "query_vault_list",
      "query_vault_list(uint256,uint8,uint8,uint8,uint8,uint256,uint256):((string,uint256,address,address,bool,uint8[],uint8,uint8)[])",
      [
        ethereum.Value.fromUnsignedBigInt(network),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(endowment_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(account_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(vault_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(approved)),
        ethereum.Value.fromUnsignedBigInt(start_after),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return result[0].toTupleArray<
      registrar__query_vault_listResultValue0Struct
    >();
  }

  try_query_vault_list(
    network: BigInt,
    endowment_type: i32,
    account_type: i32,
    vault_type: i32,
    approved: i32,
    start_after: BigInt,
    limit: BigInt
  ): ethereum.CallResult<Array<registrar__query_vault_listResultValue0Struct>> {
    let result = super.tryCall(
      "query_vault_list",
      "query_vault_list(uint256,uint8,uint8,uint8,uint8,uint256,uint256):((string,uint256,address,address,bool,uint8[],uint8,uint8)[])",
      [
        ethereum.Value.fromUnsignedBigInt(network),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(endowment_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(account_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(vault_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(approved)),
        ethereum.Value.fromUnsignedBigInt(start_after),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<registrar__query_vault_listResultValue0Struct>()
    );
  }

  query_vault_list_dep(
    network: BigInt,
    endowment_type: i32,
    account_type: i32,
    vault_type: i32,
    approved: i32,
    start_after: BigInt,
    limit: BigInt
  ): Array<registrar__query_vault_list_depResultValue0Struct> {
    let result = super.call(
      "query_vault_list_dep",
      "query_vault_list_dep(uint256,uint8,uint8,uint8,uint8,uint256,uint256):((string,uint256,address,address,bool,uint8[],uint8,uint8)[])",
      [
        ethereum.Value.fromUnsignedBigInt(network),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(endowment_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(account_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(vault_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(approved)),
        ethereum.Value.fromUnsignedBigInt(start_after),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return result[0].toTupleArray<
      registrar__query_vault_list_depResultValue0Struct
    >();
  }

  try_query_vault_list_dep(
    network: BigInt,
    endowment_type: i32,
    account_type: i32,
    vault_type: i32,
    approved: i32,
    start_after: BigInt,
    limit: BigInt
  ): ethereum.CallResult<
    Array<registrar__query_vault_list_depResultValue0Struct>
  > {
    let result = super.tryCall(
      "query_vault_list_dep",
      "query_vault_list_dep(uint256,uint8,uint8,uint8,uint8,uint256,uint256):((string,uint256,address,address,bool,uint8[],uint8,uint8)[])",
      [
        ethereum.Value.fromUnsignedBigInt(network),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(endowment_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(account_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(vault_type)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(approved)),
        ethereum.Value.fromUnsignedBigInt(start_after),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<registrar__query_vault_list_depResultValue0Struct>()
    );
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _details(): InitializeCall_detailsStruct {
    return changetype<InitializeCall_detailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall_detailsStruct extends ethereum.Tuple {
  get treasury(): Address {
    return this[0].toAddress();
  }

  get tax_rate(): BigInt {
    return this[1].toBigInt();
  }

  get rebalance(): InitializeCall_detailsRebalanceStruct {
    return changetype<InitializeCall_detailsRebalanceStruct>(this[2].toTuple());
  }

  get split_to_liquid(): InitializeCall_detailsSplit_to_liquidStruct {
    return changetype<InitializeCall_detailsSplit_to_liquidStruct>(
      this[3].toTuple()
    );
  }

  get accepted_tokens(): InitializeCall_detailsAccepted_tokensStruct {
    return changetype<InitializeCall_detailsAccepted_tokensStruct>(
      this[4].toTuple()
    );
  }

  get router(): Address {
    return this[5].toAddress();
  }

  get axelerGateway(): Address {
    return this[6].toAddress();
  }
}

export class InitializeCall_detailsRebalanceStruct extends ethereum.Tuple {
  get rebalance_liquid_invested_profits(): boolean {
    return this[0].toBoolean();
  }

  get locked_interests_to_liquid(): boolean {
    return this[1].toBoolean();
  }

  get interest_distribution(): BigInt {
    return this[2].toBigInt();
  }

  get locked_principle_to_liquid(): boolean {
    return this[3].toBoolean();
  }

  get principle_distribution(): BigInt {
    return this[4].toBigInt();
  }
}

export class InitializeCall_detailsSplit_to_liquidStruct extends ethereum.Tuple {
  get max(): BigInt {
    return this[0].toBigInt();
  }

  get min(): BigInt {
    return this[1].toBigInt();
  }

  get defaultSplit(): BigInt {
    return this[2].toBigInt();
  }
}

export class InitializeCall_detailsAccepted_tokensStruct extends ethereum.Tuple {
  get cw20(): Array<Address> {
    return this[0].toAddressArray();
  }
}

export class Update_configCall extends ethereum.Call {
  get inputs(): Update_configCall__Inputs {
    return new Update_configCall__Inputs(this);
  }

  get outputs(): Update_configCall__Outputs {
    return new Update_configCall__Outputs(this);
  }
}

export class Update_configCall__Inputs {
  _call: Update_configCall;

  constructor(call: Update_configCall) {
    this._call = call;
  }

  get _details(): Update_configCall_detailsStruct {
    return changetype<Update_configCall_detailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class Update_configCall__Outputs {
  _call: Update_configCall;

  constructor(call: Update_configCall) {
    this._call = call;
  }
}

export class Update_configCall_detailsStruct extends ethereum.Tuple {
  get accounts_contract(): Address {
    return this[0].toAddress();
  }

  get tax_rate(): BigInt {
    return this[1].toBigInt();
  }

  get rebalance(): Update_configCall_detailsRebalanceStruct {
    return changetype<Update_configCall_detailsRebalanceStruct>(
      this[2].toTuple()
    );
  }

  get approved_charities(): Array<string> {
    return this[3].toStringArray();
  }

  get split_max(): BigInt {
    return this[4].toBigInt();
  }

  get split_min(): BigInt {
    return this[5].toBigInt();
  }

  get split_default(): BigInt {
    return this[6].toBigInt();
  }

  get collector_share(): BigInt {
    return this[7].toBigInt();
  }

  get accepted_tokens(): Update_configCall_detailsAccepted_tokensStruct {
    return changetype<Update_configCall_detailsAccepted_tokensStruct>(
      this[8].toTuple()
    );
  }

  get subdao_gov_code(): Address {
    return this[9].toAddress();
  }

  get subdao_cw20_token_code(): Address {
    return this[10].toAddress();
  }

  get subdao_bonding_token_code(): Address {
    return this[11].toAddress();
  }

  get subdao_cw900_code(): Address {
    return this[12].toAddress();
  }

  get subdao_distributor_code(): Address {
    return this[13].toAddress();
  }

  get subdao_emitter(): Address {
    return this[14].toAddress();
  }

  get donation_match_code(): Address {
    return this[15].toAddress();
  }

  get index_fund_contract(): Address {
    return this[16].toAddress();
  }

  get gov_contract(): Address {
    return this[17].toAddress();
  }

  get treasury(): Address {
    return this[18].toAddress();
  }

  get donation_match_charites_contract(): Address {
    return this[19].toAddress();
  }

  get donation_match_emitter(): Address {
    return this[20].toAddress();
  }

  get halo_token(): Address {
    return this[21].toAddress();
  }

  get halo_token_lp_contract(): Address {
    return this[22].toAddress();
  }

  get charity_shares_contract(): Address {
    return this[23].toAddress();
  }

  get fundraising_contract(): Address {
    return this[24].toAddress();
  }

  get applications_review(): Address {
    return this[25].toAddress();
  }

  get swaps_router(): Address {
    return this[26].toAddress();
  }

  get multisig_factory(): Address {
    return this[27].toAddress();
  }

  get multisig_emitter(): Address {
    return this[28].toAddress();
  }

  get charity_proposal(): Address {
    return this[29].toAddress();
  }

  get locked_withdrawal(): Address {
    return this[30].toAddress();
  }

  get proxy_admin(): Address {
    return this[31].toAddress();
  }

  get USDC_address(): Address {
    return this[32].toAddress();
  }

  get Weth_address(): Address {
    return this[33].toAddress();
  }

  get cw900lv_address(): Address {
    return this[34].toAddress();
  }
}

export class Update_configCall_detailsRebalanceStruct extends ethereum.Tuple {
  get rebalance_liquid_invested_profits(): boolean {
    return this[0].toBoolean();
  }

  get locked_interests_to_liquid(): boolean {
    return this[1].toBoolean();
  }

  get interest_distribution(): BigInt {
    return this[2].toBigInt();
  }

  get locked_principle_to_liquid(): boolean {
    return this[3].toBoolean();
  }

  get principle_distribution(): BigInt {
    return this[4].toBigInt();
  }
}

export class Update_configCall_detailsAccepted_tokensStruct extends ethereum.Tuple {
  get cw20(): Array<Address> {
    return this[0].toAddressArray();
  }
}

export class Update_feesCall extends ethereum.Call {
  get inputs(): Update_feesCall__Inputs {
    return new Update_feesCall__Inputs(this);
  }

  get outputs(): Update_feesCall__Outputs {
    return new Update_feesCall__Outputs(this);
  }
}

export class Update_feesCall__Inputs {
  _call: Update_feesCall;

  constructor(call: Update_feesCall) {
    this._call = call;
  }

  get _details(): Update_feesCall_detailsStruct {
    return changetype<Update_feesCall_detailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class Update_feesCall__Outputs {
  _call: Update_feesCall;

  constructor(call: Update_feesCall) {
    this._call = call;
  }
}

export class Update_feesCall_detailsStruct extends ethereum.Tuple {
  get keys(): Array<string> {
    return this[0].toStringArray();
  }

  get values(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Update_network_connectionsCall extends ethereum.Call {
  get inputs(): Update_network_connectionsCall__Inputs {
    return new Update_network_connectionsCall__Inputs(this);
  }

  get outputs(): Update_network_connectionsCall__Outputs {
    return new Update_network_connectionsCall__Outputs(this);
  }
}

export class Update_network_connectionsCall__Inputs {
  _call: Update_network_connectionsCall;

  constructor(call: Update_network_connectionsCall) {
    this._call = call;
  }

  get network_info(): Update_network_connectionsCallNetwork_infoStruct {
    return changetype<Update_network_connectionsCallNetwork_infoStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get action(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class Update_network_connectionsCall__Outputs {
  _call: Update_network_connectionsCall;

  constructor(call: Update_network_connectionsCall) {
    this._call = call;
  }
}

export class Update_network_connectionsCallNetwork_infoStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get chain_id(): BigInt {
    return this[1].toBigInt();
  }

  get router(): Address {
    return this[2].toAddress();
  }

  get axelerGateway(): Address {
    return this[3].toAddress();
  }

  get ibc_channel(): string {
    return this[4].toString();
  }

  get transfer_channel(): string {
    return this[5].toString();
  }

  get ibc_host_contract(): Address {
    return this[6].toAddress();
  }

  get gas_limit(): BigInt {
    return this[7].toBigInt();
  }
}

export class Update_ownerCall extends ethereum.Call {
  get inputs(): Update_ownerCall__Inputs {
    return new Update_ownerCall__Inputs(this);
  }

  get outputs(): Update_ownerCall__Outputs {
    return new Update_ownerCall__Outputs(this);
  }
}

export class Update_ownerCall__Inputs {
  _call: Update_ownerCall;

  constructor(call: Update_ownerCall) {
    this._call = call;
  }

  get new_owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Update_ownerCall__Outputs {
  _call: Update_ownerCall;

  constructor(call: Update_ownerCall) {
    this._call = call;
  }
}

export class Vault_addCall extends ethereum.Call {
  get inputs(): Vault_addCall__Inputs {
    return new Vault_addCall__Inputs(this);
  }

  get outputs(): Vault_addCall__Outputs {
    return new Vault_addCall__Outputs(this);
  }
}

export class Vault_addCall__Inputs {
  _call: Vault_addCall;

  constructor(call: Vault_addCall) {
    this._call = call;
  }

  get _details(): Vault_addCall_detailsStruct {
    return changetype<Vault_addCall_detailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class Vault_addCall__Outputs {
  _call: Vault_addCall;

  constructor(call: Vault_addCall) {
    this._call = call;
  }
}

export class Vault_addCall_detailsStruct extends ethereum.Tuple {
  get network(): BigInt {
    return this[0].toBigInt();
  }

  get stratagyName(): string {
    return this[1].toString();
  }

  get input_denom(): Address {
    return this[2].toAddress();
  }

  get yield_token(): Address {
    return this[3].toAddress();
  }

  get restricted_from(): Array<i32> {
    return this[4].toI32Array();
  }

  get acct_type(): i32 {
    return this[5].toI32();
  }

  get vault_type(): i32 {
    return this[6].toI32();
  }
}

export class Vault_removeCall extends ethereum.Call {
  get inputs(): Vault_removeCall__Inputs {
    return new Vault_removeCall__Inputs(this);
  }

  get outputs(): Vault_removeCall__Outputs {
    return new Vault_removeCall__Outputs(this);
  }
}

export class Vault_removeCall__Inputs {
  _call: Vault_removeCall;

  constructor(call: Vault_removeCall) {
    this._call = call;
  }

  get _stratagyName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class Vault_removeCall__Outputs {
  _call: Vault_removeCall;

  constructor(call: Vault_removeCall) {
    this._call = call;
  }
}

export class Vault_updateCall extends ethereum.Call {
  get inputs(): Vault_updateCall__Inputs {
    return new Vault_updateCall__Inputs(this);
  }

  get outputs(): Vault_updateCall__Outputs {
    return new Vault_updateCall__Outputs(this);
  }
}

export class Vault_updateCall__Inputs {
  _call: Vault_updateCall;

  constructor(call: Vault_updateCall) {
    this._call = call;
  }

  get _stratagyName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get _restricted_from(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }
}

export class Vault_updateCall__Outputs {
  _call: Vault_updateCall;

  constructor(call: Vault_updateCall) {
    this._call = call;
  }
}
